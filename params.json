{
  "name": "Fast Predictive Image Registration",
  "tagline": "Source code for X. Yang et al., \"Fast Predictive Image Registration\"",
  "body": "This project page contains instructions to reproduce the results for our initial paper, as well as a tutorial on how to use this approach for your own registration tasks.\r\n\r\n### Paper \r\n\r\n**Fast Predictive Image Registration**    \r\nX. Yang (UNC Chapel Hill, USA)     \r\nR. Kwitt (University of Salzburg, Austria)    \r\nM. Niethammer (UNC Chapel Hill, USA)    \r\nMICCAI DLMI workshop (2016)    \r\n\r\n    ```bibtex\r\n    @inproceedings{@YKM16a,\r\n        author    = {X. Yang and R. Kwitt and M. Niethammer},\r\n        title     = {Fast Predictive Image Registration},\r\n        booktitle = {DLMI},\r\n        year      = {2016}}\r\n\r\n### Requirements\r\n\r\nOur approach for momenta prediction is implemented in Torch. The actual mapping/warping of images (using the predicted momenta) is then realized using PyCA and VectorMomentum. Regaring minimum system requirements, we tested our code on Linux running Ubuntu 16.04 with 24GB of main memory and a NVIDIA Titan X (sponsored by NVIDIA, running CUDA 8.0). If the code runs on your system, please let us know your configuration and we are happy to add it to our list of supported platforms/configurations.\r\n\r\n* [Torch](http://torch.ch/)\r\n* [PyCA](https://bitbucket.org/scicompanat/pyca)\r\n* [Vector Momentum LDDMM](https://bitbucket.org/scicompanat/vectormomentum)\r\n* MATLAB (+ [Medical Image Processing Toolbox](https://www.mathworks.com/matlabcentral/fileexchange/41594-medical-image-processing-toolbox))    \r\n\r\n### Compilation\r\n\r\nFirst, lets assume that all of our code will resides under `code`. First, we are going to install PyCA. Due to compatibility issues between the latest Vector Momentum LDDMM package (which we will use) and PyCA, we suggest to checkout a old(er) version of PyCA. Note, that we also need the Insight Toolkit (ITK) to be installed.\r\n\r\n    ```bash\r\n    apt-get install insighttoolkit4-python libinsighttoolkit4-dev # install ITK\r\n    cd /code/\r\n    git clone git@bitbucket.org:scicompanat/pyca.git\r\n    cd ./pyca\r\n    git checkout 9954dd5319efaa0ac5f58977e57acf004ad73ed7\r\n    mkdir Build\r\n    cd Build\r\n    ccmake .. # configure PyCA via cmake curses interface\r\n\r\nOn our system, we had to bump the `CUDA_ARCH_VERSION` to 20 for PyCA to compile. This can be done via the ccmake interface in the Advanced Mode. Also, the Python bindings did not compile with SWIG 3.0.3; we downgraded to swig-2.0.12 instead\r\n\r\n    ```bash\r\n    sudo apt-get install swig2.0\r\n    # you might have to uninstall swig3.0 if errors persist\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}